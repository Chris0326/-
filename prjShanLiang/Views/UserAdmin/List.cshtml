@*@model Tuple<List<prjShanLiang.Models.Member>,List<prjShanLiang.Models.StoreEvaluate>>*@
@model IEnumerable<prjShanLiang.Models.Member>

@{
    ViewData["Title"] = "List";
}

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>會員資料一覽表</h1>
<div class="card mb-4">
    <div class="card-header">
        <i class="fa-solid fa-users"></i>
        會員資料
    </div>
    <div class="card-body">

        <table id="datatables" class="hover cell-border order-column order-column">
            <thead>
                <tr>
                    <th>會員編號</th>
                    <th>會員帳號</th>
                    <th>會員名稱</th>
                    <th>會員電話</th>
                    <th>會員生日</th>
                    <th>會員地址</th>
                    <th>會員狀態</th>
                    <th>設定</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int count = 0;
                    foreach (var item in Model)
                    {
                        count++;
                        <tr>
                            <td>@count</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.MemberName)</td>
                            <td>@Html.DisplayFor(modelItem => item.Memberphone)</td>
                            <td>@(item.BrithDate?.ToString("yyyy-MM-dd"))</td>
                            <td>@Html.DisplayFor(modelItem => item.Address)</td>
                            <td>@Html.DisplayFor(modelItem => item.AccountStatusNavigation.StatusName)</td>

                            <td>
                                @Html.ActionLink("修改", "Edit", new { id = item.MemberId }, new {Class="btn btn-outline-primary"}) |
                                @Html.ActionLink("刪除", "Delete","UserAdmin", new {  id=item.MemberId },new {onclick="return confirmDelete();", Class="btn btn-outline-danger"})
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>


@*@section Scripts{
       @foreach(var item in Model){
    <script>
        function confirmDelete() {
            if(@item.StoreEvaluates.Where(e => e.MemberId == item.MemberId).Any())
            {
                    if (confirm('會員評論紀錄存在資料確定一併刪除嗎?')) {
                        return true;
                    } else {
                        return false;
                    }
            }
            else
            {
                   if (confirm('確定刪除嗎?')) {
                        return true;
                   } else {
                        return false;
                   }   
            }
            
        }
    </script>
}
}*@

@*@section Scripts{
    <script>
    @foreach (var item in Model)
    {
      
           function confirmDelete() {
                if (item.StoreEvaluates.Any(e => e.MemberId == item.MemberId)) {
                        @confirm('會員評論紀錄存在資料確定一併刪除嗎?'))
                            return true;
                    } else {
                        return false;
                    }
           }
                else {
                    if (confirm('確定刪除嗎?')) {
                        return true;
                    } else {
                        return false;
                    }
                }
            }
    </script>
}*@

    
